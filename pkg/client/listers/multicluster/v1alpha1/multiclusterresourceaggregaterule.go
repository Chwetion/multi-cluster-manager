/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "harmonycloud.cn/stellaris/pkg/apis/multicluster/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MultiClusterResourceAggregateRuleLister helps list MultiClusterResourceAggregateRules.
// All objects returned here must be treated as read-only.
type MultiClusterResourceAggregateRuleLister interface {
	// List lists all MultiClusterResourceAggregateRules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MultiClusterResourceAggregateRule, err error)
	// MultiClusterResourceAggregateRules returns an object that can list and get MultiClusterResourceAggregateRules.
	MultiClusterResourceAggregateRules(namespace string) MultiClusterResourceAggregateRuleNamespaceLister
	MultiClusterResourceAggregateRuleListerExpansion
}

// multiClusterResourceAggregateRuleLister implements the MultiClusterResourceAggregateRuleLister interface.
type multiClusterResourceAggregateRuleLister struct {
	indexer cache.Indexer
}

// NewMultiClusterResourceAggregateRuleLister returns a new MultiClusterResourceAggregateRuleLister.
func NewMultiClusterResourceAggregateRuleLister(indexer cache.Indexer) MultiClusterResourceAggregateRuleLister {
	return &multiClusterResourceAggregateRuleLister{indexer: indexer}
}

// List lists all MultiClusterResourceAggregateRules in the indexer.
func (s *multiClusterResourceAggregateRuleLister) List(selector labels.Selector) (ret []*v1alpha1.MultiClusterResourceAggregateRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MultiClusterResourceAggregateRule))
	})
	return ret, err
}

// MultiClusterResourceAggregateRules returns an object that can list and get MultiClusterResourceAggregateRules.
func (s *multiClusterResourceAggregateRuleLister) MultiClusterResourceAggregateRules(namespace string) MultiClusterResourceAggregateRuleNamespaceLister {
	return multiClusterResourceAggregateRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MultiClusterResourceAggregateRuleNamespaceLister helps list and get MultiClusterResourceAggregateRules.
// All objects returned here must be treated as read-only.
type MultiClusterResourceAggregateRuleNamespaceLister interface {
	// List lists all MultiClusterResourceAggregateRules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MultiClusterResourceAggregateRule, err error)
	// Get retrieves the MultiClusterResourceAggregateRule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MultiClusterResourceAggregateRule, error)
	MultiClusterResourceAggregateRuleNamespaceListerExpansion
}

// multiClusterResourceAggregateRuleNamespaceLister implements the MultiClusterResourceAggregateRuleNamespaceLister
// interface.
type multiClusterResourceAggregateRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MultiClusterResourceAggregateRules in the indexer for a given namespace.
func (s multiClusterResourceAggregateRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MultiClusterResourceAggregateRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MultiClusterResourceAggregateRule))
	})
	return ret, err
}

// Get retrieves the MultiClusterResourceAggregateRule from the indexer for a given namespace and name.
func (s multiClusterResourceAggregateRuleNamespaceLister) Get(name string) (*v1alpha1.MultiClusterResourceAggregateRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("multiclusterresourceaggregaterule"), name)
	}
	return obj.(*v1alpha1.MultiClusterResourceAggregateRule), nil
}
